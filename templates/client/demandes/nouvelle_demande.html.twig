{% extends 'base.html.twig' %}

{% block body %}
<div class="bg-gray-100 min-h-screen py-6">
    <div class="container mx-auto">
        <h1 class="text-3xl font-bold text-purple-800 mb-6">Nouvelle Demande</h1>
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <!-- Tableau de gauche : Liste des articles -->
            <div class="bg-white shadow rounded-lg p-6">
                <h2 class="text-xl font-bold text-gray-700 mb-4">Liste des articles</h2>
                <input type="text" id="searchArticle" placeholder="Rechercher un article..."
                    class="border border-gray-300 rounded px-4 py-2 w-full mb-4">
                <table class="min-w-full bg-white border border-gray-200">
                    <thead class="bg-gray-100">
                        <tr>
                            <th class="border px-4 py-2 text-gray-600">#</th>
                            <th class="border px-4 py-2 text-gray-600">Article</th>
                            <th class="border px-4 py-2 text-gray-600">Prix</th>
                            <th class="border px-4 py-2 text-gray-600">Qte en stock</th>
                        </tr>
                    </thead>
                    <tbody id="article-list">
                        {% for article in articles %}
                        <tr>
                            <td class="border px-4 py-2">
                                <input type="checkbox"
                                    class="article-checkbox form-checkbox h-5 w-5 text-blue-600"
                                    data-id="{{ article.id }}"
                                    data-article="{{ article.libelle }}"
                                    data-price="{{ article.prix }}"
                                    data-stock="{{ article.qteStock }}">
                            </td>
                            <td class="border px-4 py-2 text-gray-800">{{ article.libelle }}</td>
                            <td class="border px-4 py-2 text-gray-800">{{ article.prix | number_format(0, ',', '.') }} FCFA</td>
                            <td class="border px-4 py-2 text-gray-800">{{ article.qteStock }}</td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
                <div id="paginationControls" class="mt-4 flex justify-center space-x-2"></div>
            </div>

            <div class="bg-white shadow rounded-lg p-6">
                <h2 class="text-xl font-bold text-gray-700 mb-4">Liste des produits sélectionnés</h2>
                <table class="min-w-full bg-white border border-gray-200">
                    <thead class="bg-gray-100">
                        <tr>
                            <th class="border px-4 py-2 text-gray-600">Article</th>
                            <th class="border px-4 py-2 text-gray-600">Prix</th>
                            <th class="border px-4 py-2 text-gray-600">Quantité</th>
                            <th class="border px-4 py-2 text-gray-600">Montant</th>
                            <th class="border px-4 py-2 text-gray-600">Action</th>
                        </tr>
                    </thead>
                    <tbody id="selected-products">
                       
                    </tbody>
                </table>
                <div class="text-right mt-4">
                    <strong class="text-lg text-gray-700">Total: </strong>
                    <span id="total-amount" class="text-lg text-blue-600 font-bold">0</span> FCFA
                </div>
          
                <div class="mt-4">
                    <button id="saveRequestButton" class="bg-purple-600 text-white px-6 py-2 rounded-lg">
                        Enregistrer la demande
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
   document.addEventListener('DOMContentLoaded', () => {
    const articleList = document.getElementById('article-list');
    const selectedProducts = document.getElementById('selected-products');
    const totalAmount = document.getElementById('total-amount');
    const searchInput = document.getElementById('searchArticle');
    const paginationControls = document.getElementById('paginationControls');
    const rows = Array.from(articleList.querySelectorAll('tr'));
    const itemsPerPage = 3;
    let currentPage = 1;

    function handlePagination() {
        const filteredRows = rows.filter(row => row.textContent.toLowerCase().includes(searchInput.value.toLowerCase()));
        const totalPages = Math.ceil(filteredRows.length / itemsPerPage);
        paginationControls.innerHTML = '';

        for (let i = 1; i <= totalPages; i++) {
            const pageBtn = document.createElement('button');
            pageBtn.className = `py-2 px-4 rounded ${i === currentPage ? 'bg-purple-600 text-white' : 'bg-gray-200'}`;
            pageBtn.textContent = i;
            pageBtn.addEventListener('click', () => {
                currentPage = i;
                updateRows();
            });
            paginationControls.appendChild(pageBtn);
        }

        updateRows();
    }

    function updateRows() {
        const filteredRows = rows.filter(row => row.textContent.toLowerCase().includes(searchInput.value.toLowerCase()));
        const startIndex = (currentPage - 1) * itemsPerPage;
        const endIndex = currentPage * itemsPerPage;

        articleList.innerHTML = '';
        filteredRows.slice(startIndex, endIndex).forEach(row => articleList.appendChild(row));
    }

    function handleArticleSelection(event) {
        const checkbox = event.target;
        const articleId = checkbox.dataset.id;
        const articleName = checkbox.dataset.article;
        const articlePrice = parseFloat(checkbox.dataset.price);
        const articleStock = parseInt(checkbox.dataset.stock, 10);

        if (checkbox.checked) {
            const row = document.createElement('tr');
            row.setAttribute('data-id', articleId);
            row.innerHTML = `
                <td class="border px-4 py-2">${articleName}</td>
                <td class="border px-4 py-2">${articlePrice.toFixed(2)}</td>
                <td class="border px-4 py-2">
                    <input type="number" name="quantities[${articleId}]" value="1" class="quantityInput border px-2 py-1 rounded" min="1" max="${articleStock}">
                </td>
                <td class="border px-4 py-2">${articlePrice.toFixed(2)}</td>
                <td class="border px-4 py-2">
                    <button type="button" class="removeArticleButton bg-red-500 text-white py-1 px-3 rounded">Supprimer</button>
                </td>
            `;
            selectedProducts.appendChild(row);

            // Ajout d'un écouteur d'événement pour la modification de la quantité
            row.querySelector('.quantityInput').addEventListener('change', updateTotalAmount);
        } else {
            const row = selectedProducts.querySelector(`tr[data-id="${articleId}"]`);
            if (row) row.remove();
        }

        updateTotalAmount();
    }

    function updateTotalAmount() {
        let total = 0;

        selectedProducts.querySelectorAll('tr').forEach(row => {
            const quantityInput = row.querySelector('.quantityInput');
            const price = parseFloat(row.querySelector('td:nth-child(2)').textContent);
            const quantity = parseInt(quantityInput.value, 10);
            const rowTotal = price * quantity;

            row.querySelector('td:nth-child(4)').textContent = rowTotal.toFixed(2);
            total += rowTotal;
        });

        totalAmount.textContent = total.toFixed(2);
    }


    function removeArticle(event) {
        if (!event.target.classList.contains('removeArticleButton')) return;
        const row = event.target.closest('tr');
        row.remove();
        updateTotalAmount();
    }


    function saveRequest() {
        // Vous pouvez ajouter ici la logique pour enregistrer la demande
        alert('Demande enregistrée!');
    }

    rows.forEach(row => {
        row.querySelector('input.article-checkbox').addEventListener('change', handleArticleSelection);
    });

    selectedProducts.addEventListener('click', removeArticle);
    searchInput.addEventListener('input', handlePagination);

    document.getElementById('saveRequestButton').addEventListener('click', saveRequest);

    handlePagination();
});


</script>

{% endblock %}
